<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/mx" 
               xmlns:wps="com.socialcomputing.wps.components.*"
               creationComplete="onCreationComplete(event)">
    <fx:Script>
        <![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.socialcomputing.wps.components.ActionEvent;
			import com.socialcomputing.wps.components.Attribute;
			import com.socialcomputing.wps.services.planservice.PlanService;
			
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
				
            private var planName:String;
            private var planService:PlanService;
			
            protected function onCreationComplete(event:FlexEvent):void {
				// Reading application properties
				var serverURL:String = this.checkApplicationParameter("wpsserverurl");
				this.planName = this.checkApplicationParameter("wpsplanname");
				var parameters:Object = FlexGlobals.topLevelApplication.parameters;
				
				// Initialising service
				this.planService = new PlanService(serverURL);
                getPlanResult.token = this.planService.getPlan(planName, map.width, map.height, parameters);
            }
			
			private function checkApplicationParameter(paramName:String):String {
				if(!FlexGlobals.topLevelApplication.parameters.hasOwnProperty(paramName)) {
					throw new Error("Missing application parameter: " + paramName); 
				}
				return FlexGlobals.topLevelApplication.parameters[paramName];
			}
			
			protected function onAction(event:ActionEvent):void
			{
				trace( event.action + ": " + event.args.toString());
				var parameters:Object  = new Object();
				if( event.action == "NewWin") {
					//map.clear();
					parameters["entityId"] = event.args[0];
					getPlanResult.token = planService.getPlan(planName, map.width, map.height, parameters);
				}
				if( event.action == "Discover") {
					//map.clear();
					parameters["attributeId"] = event.args[0];
					parameters["analysisProfile"] = "DiscoveryProfile";
					getPlanResult.token = planService.getPlan(planName, map.width, map.height, parameters);
				}
			}
			
			private function init():void {
				status.text = 'Ok !'; 
				
				var sort:Sort = new Sort();
				sort.fields = [new SortField("NAME", false)];
				map.attributes.sort = sort;
				map.attributes.refresh();
				countries.dataProvider = map.attributes;
				
				map.defineEntities(["POSS_NAME"]);
				sort = new Sort();
				sort.fields = [new SortField("POSS_NAME", false)];
				map.entities.sort = sort;
				map.entities.refresh();
				organizations.dataProvider = map.entities;
			}
			private function attLabelFunction(item:Object):String {
				return item.NAME;
			}
			private function entLabelFunction(item:Object):String {
				return item.POSS_NAME;
			}
			private function selectCountry(event:IndexChangeEvent):void {
				map.clearSelection( "search");
				countries.selectedItem.select( "search");
				map.setSelection( "search");
			}
			private function selectOrganization(event:IndexChangeEvent):void {
				map.clearSelection( "search");
				organizations.selectedItem.select( "search");
				for each( var attribute:Attribute in organizations.selectedItem.attributes) {
					attribute.select( "search");
				}
				map.setSelection( "search");
			}
	]]>
    </fx:Script>
    
    <fx:Declarations>
        <s:CallResponder id="getPlanResult"
						 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" />
    </fx:Declarations>
    
    <s:layout>
        <s:VerticalLayout gap="5" />
    </s:layout>
	<s:Label text="Cartographie WPS :" height="20" />
	<s:HGroup>
		<s:Label text="Countries" />
		<s:DropDownList id="countries" labelFunction="attLabelFunction" change="selectCountry(event);" />
		<s:Label text="Organizations" />
		<s:DropDownList id="organizations" labelFunction="entLabelFunction" change="selectOrganization(event);" />
		<s:Button label="Clear" click="map.clearSelection( 'search'); map.setSelection( 'search')"/>
	</s:HGroup>
	<wps:Map id="map"
			backgroundColor="#7F9FDF"
			dataProvider="{getPlanResult.lastResult}" 
			ready="init();"
			status="status.text = event.status;"
			action="onAction(event);" 
			percentWidth="100"
			percentHeight="100"
	/>
	<s:Label id="status" backgroundColor="#C6C0C0" percentWidth="100" height="20"/>
</s:Application>
