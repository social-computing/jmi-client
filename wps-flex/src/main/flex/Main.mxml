<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/mx" 
               minWidth="955" minHeight="640" 
               xmlns:wps="com.socialcomputing.wps.components.*"
               creationComplete="onCreationComplete(event)" width="640" height="540">
    <fx:Script>
        <![CDATA[
            import com.adobe.serialization.json.JSON;
            import com.socialcomputing.wps.components.ActionEvent;
            import com.socialcomputing.wps.services.planservice.PlanService;
            
            import mx.controls.Alert;
            import mx.core.FlexGlobals;
            import mx.events.FlexEvent;
            import mx.rpc.events.FaultEvent;
            import mx.rpc.events.ResultEvent;
            
            private var planName:String;
            private var planService:PlanService;
			
            protected function onCreationComplete(event:FlexEvent):void {
				// Reading application properties
				var serverURL:String = this.checkApplicationParameter("wpsserverurl");
				this.planName = this.checkApplicationParameter("wpsplanname");
				var parameters:Object = FlexGlobals.topLevelApplication.parameters;
				
				// Initialising service
				this.planService = new PlanService(serverURL);
                getPlanResult.token = this.planService.getPlan(planName, map.width, map.height, parameters);
            }
			
			protected function onAction(event:ActionEvent):void
			{
				trace( event.action + ": " + event.args.toString());
				var parameters:Object  = new Object();
				if( event.action == "NewWin") {
					map.clear();
					parameters["entityId"] = event.args[0];
					getPlanResult.token = planService.getPlan(planName, map.width, map.height, parameters);
				}
				if( event.action == "Discover") {
					map.clear();
					parameters["attributeId"] = event.args[0];
					parameters["analysisProfile"] = "DiscoveryProfile";
					getPlanResult.token = planService.getPlan(planName, map.width, map.height, parameters);
				}
			}
			
			private function checkApplicationParameter(paramName:String):String {
				if(!FlexGlobals.topLevelApplication.parameters.hasOwnProperty(paramName)) {
					throw new Error("Missing application parameter: " + paramName); 
				}
				return FlexGlobals.topLevelApplication.parameters[paramName];
			}
			
			private function labelFunction(item:Object):String {
				return item.get( "NAME");
			}
	]]>
    </fx:Script>
    
    <fx:Declarations>
        <s:CallResponder id="getPlanResult"
						 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" />
    </fx:Declarations>
    
    <s:layout>
        <s:VerticalLayout gap="0" />
    </s:layout>
	<s:Label text="Cartographie WPS :" height="20" />
	<s:HGroup>
		<s:Label text="Countries" />
		<s:DropDownList id="countries" labelFunction="labelFunction" />
		<s:Label text="Organizations" />
		<s:DropDownList id="organizations" labelFunction="labelFunction" />
	</s:HGroup>
	<wps:PlanComponent id="map" 
			width="640" height="480" 
			backgroundColor="#7F9FDF"
			dataProvider="{getPlanResult.lastResult}" 
			ready="status.text = 'Ok !'; countries.dataProvider=map.nodes"
			status="status.text = event.status;"
			action="onAction(event);" 
	/>
	<s:Label id="status"  backgroundColor="#C6C0C0" width="640" height="20"/>
</s:Application>
